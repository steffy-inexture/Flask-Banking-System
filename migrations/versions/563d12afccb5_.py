"""empty message

Revision ID: 563d12afccb5
Revises: 
Create Date: 2022-06-21 12:58:47.799061

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '563d12afccb5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_details',
    sa.Column('bank_name', sa.String(length=20), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.Column('bank_email', sa.String(length=120), nullable=False),
    sa.Column('bank_contact', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('bank_id'),
    sa.UniqueConstraint('bank_email'),
    sa.UniqueConstraint('bank_name')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=320), nullable=False),
    sa.Column('user_password', sa.String(length=320), nullable=False),
    sa.Column('user_email', sa.String(length=120), nullable=False),
    sa.Column('u_p', sa.String(length=320), nullable=True),
    sa.Column('user_first_name', sa.String(length=320), nullable=False),
    sa.Column('user_last_name', sa.String(length=320), nullable=False),
    sa.Column('user_address', sa.String(length=120), nullable=False),
    sa.Column('user_age', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email'),
    sa.UniqueConstraint('user_name')
    )
    op.create_table('atm',
    sa.Column('atm_id', sa.Integer(), nullable=False),
    sa.Column('atm_address', sa.String(length=120), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bank_id'], ['bank_details.bank_id'], ),
    sa.PrimaryKeyConstraint('atm_id'),
    sa.UniqueConstraint('atm_address')
    )
    op.create_table('branch',
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('branch_name', sa.String(length=20), nullable=False),
    sa.Column('branch_address', sa.String(length=120), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bank_id'], ['bank_details.bank_id'], ),
    sa.PrimaryKeyConstraint('branch_id'),
    sa.UniqueConstraint('branch_address'),
    sa.UniqueConstraint('branch_name')
    )
    op.create_table('insurance',
    sa.Column('insurance_id', sa.Integer(), nullable=False),
    sa.Column('insurance_amount', sa.Float(), nullable=False),
    sa.Column('insurance_status', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('insurance_id')
    )
    op.create_table('loan',
    sa.Column('loan_id', sa.Integer(), nullable=False),
    sa.Column('loan_amount', sa.Integer(), nullable=False),
    sa.Column('loan_status', sa.String(length=100), nullable=False),
    sa.Column('rate_interest', sa.Float(), nullable=False),
    sa.Column('paid_amount', sa.Float(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('loan_id')
    )
    op.create_table('transaction',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('transaction_amount', sa.Float(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('user_type',
    sa.Column('user_type_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_role', sa.String(length=320), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_type_id')
    )
    op.create_table('account',
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('account_status', sa.String(length=100), nullable=False),
    sa.Column('account_balance', sa.Float(), nullable=False),
    sa.Column('saving_balance', sa.Float(), nullable=False),
    sa.Column('account_creation_date', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branch.branch_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('account_number')
    )
    op.create_table('insurance_type',
    sa.Column('insurance_type_id', sa.Integer(), nullable=False),
    sa.Column('insurance_id', sa.Integer(), nullable=False),
    sa.Column('insurance_type', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['insurance_id'], ['insurance.insurance_id'], ),
    sa.PrimaryKeyConstraint('insurance_type_id')
    )
    op.create_table('loan_type',
    sa.Column('loan_type_id', sa.Integer(), nullable=False),
    sa.Column('loan_id', sa.Integer(), nullable=False),
    sa.Column('loan_type', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['loan_id'], ['loan.loan_id'], ),
    sa.PrimaryKeyConstraint('loan_type_id')
    )
    op.create_table('transaction_type',
    sa.Column('transaction_type_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.transaction_id'], ),
    sa.PrimaryKeyConstraint('transaction_type_id')
    )
    op.create_table('account_type',
    sa.Column('account_type_id', sa.Integer(), nullable=False),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('account_type', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['account_number'], ['account.account_number'], ),
    sa.PrimaryKeyConstraint('account_type_id')
    )
    op.create_table('card',
    sa.Column('card_number', sa.Integer(), nullable=False),
    sa.Column('cvv_number', sa.Integer(), nullable=False),
    sa.Column('card_pin', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=False),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_number'], ['account.account_number'], ),
    sa.PrimaryKeyConstraint('card_number')
    )
    op.create_table('fixed_deposit',
    sa.Column('fd_id', sa.Integer(), nullable=False),
    sa.Column('fd_amount', sa.Float(), nullable=False),
    sa.Column('fd_status', sa.String(length=100), nullable=False),
    sa.Column('rate_interest', sa.Float(), nullable=False),
    sa.Column('added_amount', sa.Float(), nullable=False),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_number'], ['account.account_number'], ),
    sa.PrimaryKeyConstraint('fd_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fixed_deposit')
    op.drop_table('card')
    op.drop_table('account_type')
    op.drop_table('transaction_type')
    op.drop_table('loan_type')
    op.drop_table('insurance_type')
    op.drop_table('account')
    op.drop_table('user_type')
    op.drop_table('transaction')
    op.drop_table('loan')
    op.drop_table('insurance')
    op.drop_table('branch')
    op.drop_table('atm')
    op.drop_table('user')
    op.drop_table('bank_details')
    # ### end Alembic commands ###
